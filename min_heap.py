# -*- coding: utf-8 -*-
"""Min Heap.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14-SVC13rHfylsX9JAiBCgm3dZsJLXUmo
"""

class minheap:
  def __init__(self):
    self.head = []

  def insert(self, value):
    self.head.append(value)
    index = len(self.head)
    parentindex = index//2
    while parentindex > 0:
      if self.head[parentindex-1] > self.head[index-1]:
        self.head[parentindex-1], self.head[index-1] = self.head[index-1], self.head[parentindex-1]
        index = index//2
        parentindex = index//2
      else:
        break

  def pop(self):
    removed = self.head[0]
    popped = self.head.pop()
    self.head[0] = popped
    index = 1
    leftchildindex = index*2
    rightchildindex = index*2 + 1
    while leftchildindex-1 < len(self.head):
      if rightchildindex-1 < len(self.head) and self.head[rightchildindex-1] < self.head[leftchildindex-1]:
        if self.head[rightchildindex-1] < self.head[index-1]:
          self.head[rightchildindex-1], self.head[index-1] = self.head[index-1], self.head[rightchildindex-1]
          index = index*2 + 1
          leftchildindex = index*2
          rightchildindex = index*2 + 1
        else:
          break
      elif self.head[leftchildindex-1] < self.head[index-1]:
          self.head[leftchildindex-1], self.head[index-1] = self.head[index-1], self.head[leftchildindex-1]
          index = index*2
          leftchildindex = index*2
          rightchildindex = index*2 + 1
      else:
          break


  def printminheap(self):
    print(self.head)

myheap = minheap()
myheap.insert(5)
myheap.insert(7)
myheap.insert(2)
myheap.insert(1)
myheap.insert(0)
myheap.insert(4)
myheap.insert(3)
myheap.pop()
myheap.printminheap()